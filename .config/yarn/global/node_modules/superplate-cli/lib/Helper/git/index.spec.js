"use strict";

var _ = require("./");

describe("Git Helper", () => {
  it("not found git url IsRepoExist", async () => {
    const isRepoExist = await _.GitHelper.IsRepoExist("http://github.com/alibaba/ciftligi");
    expect(isRepoExist.error).toBe("Source repository not found.");
  });
  it("not valid git url IsRepoExist", async () => {
    const isRepoExist = await _.GitHelper.IsRepoExist("pankod");
    expect(isRepoExist.error).toBe("Source path not valid");
  });
  it("valid git url CloneAndGetPath", async () => {
    const cloneAndPath = _.GitHelper.CloneAndGetPath("https://github.com/pankod/action-test");

    await expect(cloneAndPath).resolves.not.toBeUndefined();
  });
  it("invalid git url CloneAndGetPath", async () => {
    const cloneAndPath = _.GitHelper.CloneAndGetPath("https://pankod.com");

    await expect(cloneAndPath).rejects.toThrowError();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9IZWxwZXIvZ2l0L2luZGV4LnNwZWMudHMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJpdCIsImlzUmVwb0V4aXN0IiwiR2l0SGVscGVyIiwiSXNSZXBvRXhpc3QiLCJleHBlY3QiLCJlcnJvciIsInRvQmUiLCJjbG9uZUFuZFBhdGgiLCJDbG9uZUFuZEdldFBhdGgiLCJyZXNvbHZlcyIsIm5vdCIsInRvQmVVbmRlZmluZWQiLCJyZWplY3RzIiwidG9UaHJvd0Vycm9yIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBQSxRQUFRLENBQUMsWUFBRCxFQUFlLE1BQU07QUFDekJDLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFrQyxZQUFZO0FBQzVDLFVBQU1DLFdBQVcsR0FBRyxNQUFNQyxZQUFVQyxXQUFWLENBQ3RCLG9DQURzQixDQUExQjtBQUlBQyxJQUFBQSxNQUFNLENBQUNILFdBQVcsQ0FBQ0ksS0FBYixDQUFOLENBQTBCQyxJQUExQixDQUErQiw4QkFBL0I7QUFDSCxHQU5DLENBQUY7QUFRQU4sRUFBQUEsRUFBRSxDQUFDLCtCQUFELEVBQWtDLFlBQVk7QUFDNUMsVUFBTUMsV0FBVyxHQUFHLE1BQU1DLFlBQVVDLFdBQVYsQ0FBc0IsUUFBdEIsQ0FBMUI7QUFFQUMsSUFBQUEsTUFBTSxDQUFDSCxXQUFXLENBQUNJLEtBQWIsQ0FBTixDQUEwQkMsSUFBMUIsQ0FBK0IsdUJBQS9CO0FBQ0gsR0FKQyxDQUFGO0FBTUFOLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFrQyxZQUFZO0FBQzVDLFVBQU1PLFlBQVksR0FBR0wsWUFBVU0sZUFBVixDQUNqQix1Q0FEaUIsQ0FBckI7O0FBSUEsVUFBTUosTUFBTSxDQUFDRyxZQUFELENBQU4sQ0FBcUJFLFFBQXJCLENBQThCQyxHQUE5QixDQUFrQ0MsYUFBbEMsRUFBTjtBQUNILEdBTkMsQ0FBRjtBQVFBWCxFQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsWUFBWTtBQUM5QyxVQUFNTyxZQUFZLEdBQUdMLFlBQVVNLGVBQVYsQ0FBMEIsb0JBQTFCLENBQXJCOztBQUVBLFVBQU1KLE1BQU0sQ0FBQ0csWUFBRCxDQUFOLENBQXFCSyxPQUFyQixDQUE2QkMsWUFBN0IsRUFBTjtBQUNILEdBSkMsQ0FBRjtBQUtILENBNUJPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHaXRIZWxwZXIgfSBmcm9tIFwiLi9cIjtcblxuZGVzY3JpYmUoXCJHaXQgSGVscGVyXCIsICgpID0+IHtcbiAgICBpdChcIm5vdCBmb3VuZCBnaXQgdXJsIElzUmVwb0V4aXN0XCIsIGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgaXNSZXBvRXhpc3QgPSBhd2FpdCBHaXRIZWxwZXIuSXNSZXBvRXhpc3QoXG4gICAgICAgICAgICBcImh0dHA6Ly9naXRodWIuY29tL2FsaWJhYmEvY2lmdGxpZ2lcIixcbiAgICAgICAgKTtcblxuICAgICAgICBleHBlY3QoaXNSZXBvRXhpc3QuZXJyb3IpLnRvQmUoXCJTb3VyY2UgcmVwb3NpdG9yeSBub3QgZm91bmQuXCIpO1xuICAgIH0pO1xuXG4gICAgaXQoXCJub3QgdmFsaWQgZ2l0IHVybCBJc1JlcG9FeGlzdFwiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGlzUmVwb0V4aXN0ID0gYXdhaXQgR2l0SGVscGVyLklzUmVwb0V4aXN0KFwicGFua29kXCIpO1xuXG4gICAgICAgIGV4cGVjdChpc1JlcG9FeGlzdC5lcnJvcikudG9CZShcIlNvdXJjZSBwYXRoIG5vdCB2YWxpZFwiKTtcbiAgICB9KTtcblxuICAgIGl0KFwidmFsaWQgZ2l0IHVybCBDbG9uZUFuZEdldFBhdGhcIiwgYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCBjbG9uZUFuZFBhdGggPSBHaXRIZWxwZXIuQ2xvbmVBbmRHZXRQYXRoKFxuICAgICAgICAgICAgXCJodHRwczovL2dpdGh1Yi5jb20vcGFua29kL2FjdGlvbi10ZXN0XCIsXG4gICAgICAgICk7XG5cbiAgICAgICAgYXdhaXQgZXhwZWN0KGNsb25lQW5kUGF0aCkucmVzb2x2ZXMubm90LnRvQmVVbmRlZmluZWQoKTtcbiAgICB9KTtcblxuICAgIGl0KFwiaW52YWxpZCBnaXQgdXJsIENsb25lQW5kR2V0UGF0aFwiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGNsb25lQW5kUGF0aCA9IEdpdEhlbHBlci5DbG9uZUFuZEdldFBhdGgoXCJodHRwczovL3BhbmtvZC5jb21cIik7XG5cbiAgICAgICAgYXdhaXQgZXhwZWN0KGNsb25lQW5kUGF0aCkucmVqZWN0cy50b1Rocm93RXJyb3IoKTtcbiAgICB9KTtcbn0pO1xuIl19