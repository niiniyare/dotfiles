"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HumanizeChoices = void 0;
const HumanizeChoices = {
  get: choice => {
    switch (choice) {
      case "react":
        return {
          title: "React",
          description: "Creates a React CRA project",
          value: choice
        };

      case "nextjs":
        return {
          title: "NextJS",
          description: "Creates a Next.js project",
          value: choice
        };

      case "refine-react":
        return {
          title: "refine(CRA)",
          description: "Creates a basic refine project (Recommended for CRUD applications)",
          value: choice
        };

      case "refine-nextjs":
        return {
          title: "refine(Next.js)",
          description: "Creates a refine Next.js project with SSR support (Recommended for CRUD applications).",
          value: choice
        };

      case "refine-remix":
        return {
          title: "refine(Remix)",
          description: "Creates a refine Remix project with SSR support (Recommended for CRUD applications)",
          value: choice
        };

      default:
        return {
          title: choice,
          description: "",
          value: choice
        };
    }
  }
};
exports.HumanizeChoices = HumanizeChoices;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9IZWxwZXIvaHVtYW5pemUvaW5kZXgudHMiXSwibmFtZXMiOlsiSHVtYW5pemVDaG9pY2VzIiwiZ2V0IiwiY2hvaWNlIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxNQUFNQSxlQUFlLEdBQUc7QUFDM0JDLEVBQUFBLEdBQUcsRUFDQ0MsTUFEQyxJQUV1RDtBQUN4RCxZQUFRQSxNQUFSO0FBQ0ksV0FBSyxPQUFMO0FBQ0ksZUFBTztBQUNIQyxVQUFBQSxLQUFLLEVBQUUsT0FESjtBQUVIQyxVQUFBQSxXQUFXLEVBQUUsNkJBRlY7QUFHSEMsVUFBQUEsS0FBSyxFQUFFSDtBQUhKLFNBQVA7O0FBS0osV0FBSyxRQUFMO0FBQ0ksZUFBTztBQUNIQyxVQUFBQSxLQUFLLEVBQUUsUUFESjtBQUVIQyxVQUFBQSxXQUFXLEVBQUUsMkJBRlY7QUFHSEMsVUFBQUEsS0FBSyxFQUFFSDtBQUhKLFNBQVA7O0FBS0osV0FBSyxjQUFMO0FBQ0ksZUFBTztBQUNIQyxVQUFBQSxLQUFLLEVBQUUsYUFESjtBQUVIQyxVQUFBQSxXQUFXLEVBQ1Asb0VBSEQ7QUFJSEMsVUFBQUEsS0FBSyxFQUFFSDtBQUpKLFNBQVA7O0FBTUosV0FBSyxlQUFMO0FBQ0ksZUFBTztBQUNIQyxVQUFBQSxLQUFLLEVBQUUsaUJBREo7QUFFSEMsVUFBQUEsV0FBVyxFQUNQLHdGQUhEO0FBSUhDLFVBQUFBLEtBQUssRUFBRUg7QUFKSixTQUFQOztBQU1KLFdBQUssY0FBTDtBQUNJLGVBQU87QUFDSEMsVUFBQUEsS0FBSyxFQUFFLGVBREo7QUFFSEMsVUFBQUEsV0FBVyxFQUNQLHFGQUhEO0FBSUhDLFVBQUFBLEtBQUssRUFBRUg7QUFKSixTQUFQOztBQU1KO0FBQ0ksZUFBTztBQUNIQyxVQUFBQSxLQUFLLEVBQUVELE1BREo7QUFFSEUsVUFBQUEsV0FBVyxFQUFFLEVBRlY7QUFHSEMsVUFBQUEsS0FBSyxFQUFFSDtBQUhKLFNBQVA7QUFuQ1I7QUF5Q0g7QUE3QzBCLENBQXhCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEh1bWFuaXplQ2hvaWNlcyA9IHtcbiAgICBnZXQ6IChcbiAgICAgICAgY2hvaWNlOiBzdHJpbmcsXG4gICAgKTogeyB0aXRsZTogc3RyaW5nOyBkZXNjcmlwdGlvbjogc3RyaW5nOyB2YWx1ZTogc3RyaW5nIH0gPT4ge1xuICAgICAgICBzd2l0Y2ggKGNob2ljZSkge1xuICAgICAgICAgICAgY2FzZSBcInJlYWN0XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IFwiUmVhY3RcIixcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiQ3JlYXRlcyBhIFJlYWN0IENSQSBwcm9qZWN0XCIsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBjaG9pY2UsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNhc2UgXCJuZXh0anNcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogXCJOZXh0SlNcIixcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiQ3JlYXRlcyBhIE5leHQuanMgcHJvamVjdFwiLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogY2hvaWNlLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYXNlIFwicmVmaW5lLXJlYWN0XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IFwicmVmaW5lKENSQSlcIixcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgICAgICBcIkNyZWF0ZXMgYSBiYXNpYyByZWZpbmUgcHJvamVjdCAoUmVjb21tZW5kZWQgZm9yIENSVUQgYXBwbGljYXRpb25zKVwiLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogY2hvaWNlLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYXNlIFwicmVmaW5lLW5leHRqc1wiOlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcInJlZmluZShOZXh0LmpzKVwiLFxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiQ3JlYXRlcyBhIHJlZmluZSBOZXh0LmpzIHByb2plY3Qgd2l0aCBTU1Igc3VwcG9ydCAoUmVjb21tZW5kZWQgZm9yIENSVUQgYXBwbGljYXRpb25zKS5cIixcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGNob2ljZSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSBcInJlZmluZS1yZW1peFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcInJlZmluZShSZW1peClcIixcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgICAgICAgICAgICBcIkNyZWF0ZXMgYSByZWZpbmUgUmVtaXggcHJvamVjdCB3aXRoIFNTUiBzdXBwb3J0IChSZWNvbW1lbmRlZCBmb3IgQ1JVRCBhcHBsaWNhdGlvbnMpXCIsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBjaG9pY2UsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IGNob2ljZSxcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBjaG9pY2UsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH0sXG59O1xuIl19