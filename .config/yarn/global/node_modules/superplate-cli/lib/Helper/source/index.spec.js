"use strict";

var _util = require("util");

var _ = require("./");

jest.mock("util", () => ({
  promisify: jest.fn(),
  inherits: () => ({
    custom: {}
  }),
  inspect: () => ({})
}));
describe("Source Helper", () => {
  it("incorrect source url/path", async () => {
    const source = await (0, _.get_source)("alibaba");
    expect(source.error).toBe("Source path not valid");
  });
  it("incorrect source url/path", async () => {
    const source = await (0, _.get_source)("https://github.com/alibaba/ciftligi");
    expect(source.error).toBe("Source repository not found.");
  });
  it("correct source url", async () => {
    _util.promisify.mockImplementation(() => jest.fn());

    const source = await (0, _.get_source)("superplate-core-plugins");
    expect(source.error).toBe(undefined);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9IZWxwZXIvc291cmNlL2luZGV4LnNwZWMudHMiXSwibmFtZXMiOlsiamVzdCIsIm1vY2siLCJwcm9taXNpZnkiLCJmbiIsImluaGVyaXRzIiwiY3VzdG9tIiwiaW5zcGVjdCIsImRlc2NyaWJlIiwiaXQiLCJzb3VyY2UiLCJleHBlY3QiLCJlcnJvciIsInRvQmUiLCJtb2NrSW1wbGVtZW50YXRpb24iLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0FBLElBQUksQ0FBQ0MsSUFBTCxDQUFVLE1BQVYsRUFBa0IsT0FBTztBQUNyQkMsRUFBQUEsU0FBUyxFQUFFRixJQUFJLENBQUNHLEVBQUwsRUFEVTtBQUVyQkMsRUFBQUEsUUFBUSxFQUFFLE9BQU87QUFDYkMsSUFBQUEsTUFBTSxFQUFFO0FBREssR0FBUCxDQUZXO0FBS3JCQyxFQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFQO0FBTFksQ0FBUCxDQUFsQjtBQU9BQyxRQUFRLENBQUMsZUFBRCxFQUFrQixNQUFNO0FBQzVCQyxFQUFBQSxFQUFFLENBQUMsMkJBQUQsRUFBOEIsWUFBWTtBQUN4QyxVQUFNQyxNQUFNLEdBQUcsTUFBTSxrQkFBVyxTQUFYLENBQXJCO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ0QsTUFBTSxDQUFDRSxLQUFSLENBQU4sQ0FBcUJDLElBQXJCLENBQTBCLHVCQUExQjtBQUNILEdBSEMsQ0FBRjtBQUtBSixFQUFBQSxFQUFFLENBQUMsMkJBQUQsRUFBOEIsWUFBWTtBQUN4QyxVQUFNQyxNQUFNLEdBQUcsTUFBTSxrQkFBVyxxQ0FBWCxDQUFyQjtBQUNBQyxJQUFBQSxNQUFNLENBQUNELE1BQU0sQ0FBQ0UsS0FBUixDQUFOLENBQXFCQyxJQUFyQixDQUEwQiw4QkFBMUI7QUFDSCxHQUhDLENBQUY7QUFLQUosRUFBQUEsRUFBRSxDQUFDLG9CQUFELEVBQXVCLFlBQVk7QUFDaENOLG1CQUFELENBQW1CVyxrQkFBbkIsQ0FBc0MsTUFBTWIsSUFBSSxDQUFDRyxFQUFMLEVBQTVDOztBQUVBLFVBQU1NLE1BQU0sR0FBRyxNQUFNLGtCQUFXLHlCQUFYLENBQXJCO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ0QsTUFBTSxDQUFDRSxLQUFSLENBQU4sQ0FBcUJDLElBQXJCLENBQTBCRSxTQUExQjtBQUNILEdBTEMsQ0FBRjtBQU1ILENBakJPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcm9taXNpZnkgfSBmcm9tIFwidXRpbFwiO1xuaW1wb3J0IHsgZ2V0X3NvdXJjZSB9IGZyb20gXCIuL1wiO1xuamVzdC5tb2NrKFwidXRpbFwiLCAoKSA9PiAoe1xuICAgIHByb21pc2lmeTogamVzdC5mbigpLFxuICAgIGluaGVyaXRzOiAoKSA9PiAoe1xuICAgICAgICBjdXN0b206IHt9LFxuICAgIH0pLFxuICAgIGluc3BlY3Q6ICgpID0+ICh7fSksXG59KSk7XG5kZXNjcmliZShcIlNvdXJjZSBIZWxwZXJcIiwgKCkgPT4ge1xuICAgIGl0KFwiaW5jb3JyZWN0IHNvdXJjZSB1cmwvcGF0aFwiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IGF3YWl0IGdldF9zb3VyY2UoXCJhbGliYWJhXCIpO1xuICAgICAgICBleHBlY3Qoc291cmNlLmVycm9yKS50b0JlKFwiU291cmNlIHBhdGggbm90IHZhbGlkXCIpO1xuICAgIH0pO1xuXG4gICAgaXQoXCJpbmNvcnJlY3Qgc291cmNlIHVybC9wYXRoXCIsIGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3Qgc291cmNlID0gYXdhaXQgZ2V0X3NvdXJjZShcImh0dHBzOi8vZ2l0aHViLmNvbS9hbGliYWJhL2NpZnRsaWdpXCIpO1xuICAgICAgICBleHBlY3Qoc291cmNlLmVycm9yKS50b0JlKFwiU291cmNlIHJlcG9zaXRvcnkgbm90IGZvdW5kLlwiKTtcbiAgICB9KTtcblxuICAgIGl0KFwiY29ycmVjdCBzb3VyY2UgdXJsXCIsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKHByb21pc2lmeSBhcyBhbnkpLm1vY2tJbXBsZW1lbnRhdGlvbigoKSA9PiBqZXN0LmZuKCkpO1xuXG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IGF3YWl0IGdldF9zb3VyY2UoXCJzdXBlcnBsYXRlLWNvcmUtcGx1Z2luc1wiKTtcbiAgICAgICAgZXhwZWN0KHNvdXJjZS5lcnJvcikudG9CZSh1bmRlZmluZWQpO1xuICAgIH0pO1xufSk7XG4iXX0=